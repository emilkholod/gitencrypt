#!/bin/bash

PROJECT_GITENCRYPT_PATH_TO_SECRETS=./.gitencrypt_secrets

# Check env variables
if [[ ! -n "$GITENCRYPT_PASS_FIXED" ]]; then
    # Check project variables
    if [[ ! -f "$(pwd)/$PROJECT_GITENCRYPT_PATH_TO_SECRETS" ]]; then
        >&2 echo "Please set 'GITENCRYPT_SALT_FIXED' and 'GITENCRYPT_PASS_FIXED' to env varibles"
        >&2 echo "Or define them in '$DEFAULT_GITENCRYPT_PATH_TO_SECRETS' file"
        exit 1
    else
        set -o allexport && source $PROJECT_GITENCRYPT_PATH_TO_SECRETS && set +o allexport
    fi
fi

GITENCRYPT_DEBUG=false
binary_to_hex="xxd -p -c 1000000000"
hex_to_binary="xxd -r -p"
remove_null_byte="tr -d "\r\n\0""
base64_regexp="^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
GITENCRYPT_LOG_PATH="./log.txt"

openssl_version="$(openssl version | grep -Po '(?<=OpenSSL )[^; ]+' | head -n 1)"

if [[ $openssl_version == 3.* ]]; then
    function openssl_crypt_fix(){
        # Add salt prefix
        $binary_to_hex | sed "s/^/53616c7465645f5f${GITENCRYPT_SALT_FIXED}/" | $hex_to_binary
    };
    function openssl_decrypt_fix(){
        # Remove salt prefix
        $binary_to_hex | sed "s/^53616c7465645f5f${GITENCRYPT_SALT_FIXED}//" | $hex_to_binary
    };
else
    function openssl_crypt_fix(){
        $binary_to_hex | sed "/^53616c7465645f5f/! s/^/53616c7465645f5f${GITENCRYPT_SALT_FIXED}&/" | $hex_to_binary
    };
    function openssl_decrypt_fix(){
        openssl_crypt_fix
    };
fi

function gitencrypt_openssl_command() {
    openssl enc -aes-256-ecb -pbkdf2 -k ${GITENCRYPT_PASS_FIXED} -S ${GITENCRYPT_SALT_FIXED} "$2"
}


function gitencrypt_crypt(){
    gitencrypt_openssl_command "$1" -e | openssl_crypt_fix | base64 -w 64
}


function gitencrypt_decrypt(){
    base64 -d | openssl_decrypt_fix | gitencrypt_openssl_command "$1" -d || cat
}


function debug() {
    if $GITENCRYPT_DEBUG; then
        echo "" >> $GITENCRYPT_LOG_PATH
        echo $1 >> $GITENCRYPT_LOG_PATH
        echo "Args "$2"" >> $GITENCRYPT_LOG_PATH
        head -1 "$2" >> $GITENCRYPT_LOG_PATH
    fi
}

function debug_tee() {
    if $GITENCRYPT_DEBUG; then
        tee -a $GITENCRYPT_LOG_PATH
    else
        cat 
    fi
}


function gitencrypt_clean() {
    debug "--- Clean ---" "$@"

    # Encoding
    gitencrypt_crypt "$1" 2>> $GITENCRYPT_LOG_PATH | debug_tee
} 


function gitencrypt_smudge() {
    debug "--- Smudge ---" "$@"

    # Decoding
    gitencrypt_decrypt "$1" 2>> $GITENCRYPT_LOG_PATH | debug_tee
}


function is_text_base64() {
    if [[ $1 =~ $base64_regexp ]]; then true; else false; fi
}


function gitencrypt_textconv() {
    # Decoding
    local text=$(cat "$1")
    if is_text_base64 $text; then
        cat "$1" | gitencrypt_decrypt "$1" 2>> $GITENCRYPT_LOG_PATH
    else
        cat "$1"
    fi
}
